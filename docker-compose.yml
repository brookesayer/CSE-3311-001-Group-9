services:
  db:
    image: postgis/postgis:16-3.4
    container_name: travel_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-travel_app}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/00-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-travel_app}"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: travel_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/travel_app}
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN:-http://localhost:5173}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000   # ‚Üê no --reload

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: travel_web
    depends_on:
      - api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0 --port 5173


volumes:
  pgdata:
