services:
  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - ./.env.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: dockerfile.backend # Corrected to lowercase 'd'
    restart: always
    env_file:
      - ./.env
    ports:
      - "5000:5000"
    command: gunicorn --bind 0.0.0.0:5000 app:app
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./my-project
      dockerfile: dockerfile.frontend # Corrected to lowercase 'd'
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - backend

volumes:
  postgres_data:

